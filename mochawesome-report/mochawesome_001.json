{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-21T16:58:52.089Z",
    "end": "2023-08-21T16:58:52.607Z",
    "duration": 518,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8b86ba14-df22-4d29-96e4-3de9d7431950",
      "title": "",
      "fullFile": "cypress/e2e/healthapp/create_household.cy.js",
      "file": "cypress/e2e/healthapp/create_household.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "66818f25-43fa-41b9-8009-cfe474d0b6b1",
          "title": "Register Household Test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create household with valid data",
              "fullTitle": "Register Household Test suite create household with valid data",
              "timedOut": null,
              "duration": 400,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let cusData = household.createHousehold;\ncusData.RequestInfo.authToken = `${accessToken}`;\ncy.postCall('/household/v1/_create', cusData).should(response => {\n  expect(response.status).to.eq(202);\n});",
              "err": {},
              "uuid": "a20daf87-36f6-43d7-b6ec-8eede569e2af",
              "parentUUID": "66818f25-43fa-41b9-8009-cfe474d0b6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "create household with valid data and invalid auth",
              "fullTitle": "Register Household Test suite create household with valid data and invalid auth",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let cusData = household.createHousehold;\ncusData.RequestInfo.authToken = `invalidtoken`;\ncy.postCall('/household/v1/_create', cusData).should(response => {\n  //Authentication failure should retun 401 but here its 500\n  expect(response.status).to.eq(500);\n});",
              "err": {},
              "uuid": "51c91456-ee73-4852-9db8-5b6a934c429c",
              "parentUUID": "66818f25-43fa-41b9-8009-cfe474d0b6b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a20daf87-36f6-43d7-b6ec-8eede569e2af",
            "51c91456-ee73-4852-9db8-5b6a934c429c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}